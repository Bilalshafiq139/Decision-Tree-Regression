# -*- coding: utf-8 -*-
"""Decision Tree Regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1436xf60Z-a7YAM-G5VnyJdj4zO31G3lb

# **1. Decision Tree Regression**

**Problem Statement**:
Predict the price of houses using features .

**DataSet Link**: https://www.kaggle.com/datasets/yasserh/housing-prices-dataset

**Instructions**
* Load the dataset into a DataFrame (use pandas).
* Split it into 80% training and 20% testing.
* Train a Decision Tree Regressor using the training data.
* Evaluate the model using MSE and visualize the Decision Tree.
* Write a report summarizing the findings.
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

df = pd.read_csv("Housing.csv")

df

df_encoded = pd.get_dummies(df, drop_first=True)

print(df_encoded.head())

X = df_encoded.iloc[:, 1:-1].values
y = df_encoded.iloc[:, -1].values

print("Shape of X:", X.shape)
print("Shape of y:", y.shape)

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error
from sklearn.tree import plot_tree

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = DecisionTreeRegressor(random_state=42)
model.fit(X_train, y_train)

training_score = model.score(X_train, y_train)
print("Training Score (RÂ²):", training_score) #checking the trainging score

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error (MSE):", mse)

plt.figure(figsize=(20, 10))
plot_tree(
    model,
    feature_names=df_encoded.columns[1:-1],
    filled=True,
    rounded=True,
    fontsize=10
)
plt.title("Decision Tree Visualization")
plt.show()

